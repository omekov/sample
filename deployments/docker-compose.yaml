version: '3.5'

services:
  # mongodb:
  #   container_name: sample_mongo_database
  #   image: mongo:latest
  #   environment: 
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGOUSERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGOPASSWORD}
  #     MONGO_INITDB_DATABASE: ${MONGONAME}
  #   ports:
  #     - 27017:27017
  #   command: [--auth]
  #   volumes:
  #     - ./volumes/mongodb:/data/db
  #   networks: 
  #     - samplenetwork
  #   restart: always

  # redis:
  #   container_name: sample_redis_cache
  #   image: redis:latest
  #   command: redis-server --requirepass ${REDISPASSWORD}
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - samplenetwork

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: sample_rabbitmq
    volumes:
      # - ./volumes/rabbitmq/etc/:/etc/rabbitmq/
      - ./volumes/rabbitmq/data/:/var/lib/rabbitmq/
      - ./volumes/rabbitmq/logs/:/var/log/rabbitmq/
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - samplenetwork
    # environment:
      # RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      # RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      # RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  # backend:
  #   container_name: sample_backend
  #   build: .
  #   env_file: 
  #     - .env
  #   volumes: 
  #     - ./volumes/backend:/usr/src/app/
  #   ports:
  #     - ${PORT}:${PORT}
  #   depends_on: 
  #     - mongodb
  #     - redis
  #     - rabbitmq
  #   networks: 
  #     - samplenetwork
  #   restart: on-failure

  # backend-nest:
  #   container_name: sample_backend-nest
  #   build: 
  #     context: ./services/sample-nestjs
  #     target: ${APP_MODE}
  #   env_file: 
  #     - .env  
  #   volumes:
  #     - ./services/sample-nestjs:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports: 
  #     - ${NESTPORT}:${NESTPORT}
  #   command: npm run start:dev
    # depends_on: 
    #   - backend
    # networks:
    #   - samplenetwork

  # frontend:
  #   container_name: sample_frontend
  #   build: ./web
  #   env_file: 
  #     - ./web/.env
  #   ports: 
  #     - "9091:80"
    # depends_on: 
    #   - backend
    # networks: 
    #   - samplenetwork

  # nginx:
  #   container_name: sample_nginx
  #   build: "./nginx"
  #   restart: always
  #   volumes:
  #     - ./volumes/nginx/templates:/etc/nginx/templates
  #   expose:
  #     - "9095"
  #   ports:
  #     - "9095:80"
  #     - "443:443"
    # depends_on: 
    #   - frontend
    # networks: 
    #   - samplenetwork
      
networks:
  samplenetwork:
    driver: bridge
volumes:
    mongodb_data_container: