version: '3.5'

services:
  mongodb:
    container_name: sample_mongo_database
    image: mongo:latest
    environment: 
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_NAME}
    ports:
      - 27017:27017
    command: [--auth]
    volumes:
      - ./volumes/mongodb:/data/db
    networks: 
      - samplenetwork
    restart: always

  redis:
    container_name: sample_redis_cache
    image: redis:latest
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 6379:6379
    networks: 
      - samplenetwork

  rabbitmq:
    hostname: sample_rabbitmq
    image: rabbitmq:3-management-alpine
    volumes:
      # - ./volumes/rabbitmq/etc/:/etc/rabbitmq/
      - ./volumes/rabbitmq/data/:/var/lib/rabbitmq/
      - ./volumes/rabbitmq/logs/:/var/log/rabbitmq/
    ports:
      - "5672:5672"
      - "15672:15672"
    networks: 
      - samplenetwork

  backend:
    container_name: sample_backend
    build: ../
    env_file: 
      - .env
    volumes: 
      - ./volumes/backend:/usr/src/app/
    ports:
      - ${PORT}:${PORT}
    depends_on: 
      - mongodb
      - redis
      - rabbitmq
    networks: 
      - samplenetwork
    restart: on-failure

  frontend:
    container_name: sample_frontend
    build: ../web/sample-react-ui
    env_file: 
      - ../web/sample-react-ui/.env
    ports: 
      - "8080:8080"
    depends_on: 
      - backend
    networks: 
      - samplenetwork

  nginx:
    container_name: sample_nginx_v1
    build: "./nginx"
    restart: always
    volumes:
      - ./volumes/nginx/templates:/etc/nginx/templates
    expose:
      - "9099"
    depends_on: 
      - frontend
    networks: 
      - samplenetwork
      
networks:
  samplenetwork:
    driver: bridge