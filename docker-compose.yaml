version: '3.5'

services:
  mongodb:
    container_name: sample_mongo_database
    image: mongo:latest
    environment: 
      MONGO_INITDB_ROOT_USERNAME: ${MONGOUSERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGOPASSWORD}
      MONGO_INITDB_DATABASE: ${MONGONAME}
    ports:
      - 27017:27017
    volumes:
      - ./volumes/mongodb:/data/db
    networks: 
      - samplenetwork
    restart: always

  redis:
    container_name: sample_redis_cache
    image: redis:latest
    command: redis-server --requirepass ${REDISPASSWORD}
    ports:
      - "6379:6379"
    networks:
      - samplenetwork

  backend:
    container_name: sample_backend
    build: .
    env_file: 
      - .env
    volumes: 
      - ./volumes/backend:/usr/src/app/
    ports:
      - "9090:9090"
    depends_on: 
      - mongodb
      - redis
    networks: 
      - samplenetwork
    restart: on-failure
  # jenkins:
  #   container_name: sample_jenkins
  #   image: jenkins/jenkins:lts
  #   privileged: true
  #   user: root
  #   networks: 
  #     - samplenetwork
  #   ports:
  #     - 8081:8080
  #     - 50000:50000
  #   volumes:
  #     - ~/jenkins:/var/jenkins_home
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /usr/local/bin/docker:/usr/local/bin/docker
  frontend:
    container_name: sample_frontend
    build: ./web
    env_file: 
      - ./web/.env
    ports: 
      - "80:80"
    depends_on: 
      - backend
    networks: 
      - samplenetwork
  nginx:
    build: "./nginx"
    restart: always
    expose:
      - "80"
    ports:
      - "80:80"
      - "443:443"
    depends_on: 
      - frontend
    networks: 
      - samplenetwork
      
networks:
  samplenetwork:
    driver: bridge
volumes:
    mongodb_data_container: