basePath: /
definitions:
  models.Credential:
    properties:
      password:
        example: '-'
        type: string
      username:
        example: example@gmail.com
        type: string
    type: object
  models.Customer:
    properties:
      firstname:
        example: Adam
        type: string
      password:
        example: '-'
        type: string
      repeatPassword:
        example: '-'
        type: string
      username:
        example: example@gmail.com
        type: string
    type: object
  models.Error:
    properties:
      error:
        example: error
        type: string
    type: object
  models.Token:
    properties:
      accessToken:
        example: jwt-token
        type: string
      refreshToken:
        example: jwt-token
        type: string
    type: object
host: localhost:9090
info:
  contact:
    email: umekovazamat@gmail.com
    name: API Support
  description: This is a sample service for managment
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Sample API
  version: "2.0"
paths:
  /api/refresh:
    post:
      consumes:
      - application/json
      description: whoami input header Authorization Bearer <token>, return refresh
        in Claims
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Refresh token
      tags:
      - sign
  /api/whoami:
    get:
      consumes:
      - application/json
      description: whoami input header Authorization Bearer <token>, return parse
        in Claims
      produces:
      - application/json
      responses:
        "200":
          description: 'Customer":{"username": "example@gmail.com", "firstname": "Adam"
            },"exp": 1602666876}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Parse token
      tags:
      - sign
  /signin:
    post:
      consumes:
      - application/json
      description: Sign auth client the input paylod
      parameters:
      - description: SignIn auth
        in: body
        name: signin
        required: true
        schema:
          $ref: '#/definitions/models.Credential'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Sign auth
      tags:
      - sign
  /signup:
    post:
      consumes:
      - application/json
      description: Sign Up new customer the input paylod
      parameters:
      - description: SignUp customer
        in: body
        name: signup
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "201":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Sign Up new customer
      tags:
      - sign
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
